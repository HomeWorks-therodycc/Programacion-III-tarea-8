@page "/mapa-vacunados"

@using Data.Models
@using BlazorLeaflet
@using BlazorLeaflet.Models
@using BlazorLeaflet.Models.Events
@using Shared
@using Microsoft.EntityFrameworkCore
@inject IJSRuntime jsr
@inject vacunaContext vc

<h3 class="titulocantvacuna">Mapa de vacunados</h3>

<br>
<div id="mapContainer" style="width: 100%; height: 375px;">
    <LeafletMap Map="mapa" />
</div>
<br>
@if (vacunado != null) {
    <div>
        <VacunadoCard Vacunado="vacunado" />
    </div>
}

@code 
{
    private Map mapa = null;
    private Vacunado vacunado = null;
    private List<Vacunado> vacunados = null;

    protected override void OnInitialized() {
        vacunados = vc.Vacunados.Include("Provincia")
            .Include("Vacuna1").Include("Vacuna2").ToList();

        mapa = new Map(jsr) {
            Center = new LatLng(18.9f, -70f),
            Zoom = 7.47f
        };

        mapa.OnInitialized += () => {
            mapa.AddLayer(new TileLayer {                
                UrlTemplate = "https://tile.openstreetmap.org/{z}/{x}/{y}.png",
                Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            });

            foreach (var v in vacunados) {

                var marker = new Marker(v.Latitud.Value, v.Longitud.Value) {
                    Title = v.Id.ToString(),
                    RiseOnHover = true,
                    Tooltip = new Tooltip() {
                        Content = $"{v.Cedula}",
                        IsPermanent = true
                    }
                };

                marker.OnClick += (InteractiveLayer sender, MouseEvent e) => {
                    var marker = (Marker) sender;

                    vacunado = vc.Vacunados.First(x => x.Id == Convert.ToInt32(marker.Title));

                    StateHasChanged();
                };

                mapa.AddLayer(marker);
            }
        };
    }
}